<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC '-//ibatis.apache.org//DTD Sql Map 2.0//EN' 'http://ibatis.apache.org/dtd/sql-map-2.dtd'>

<sqlMap namespace="cash">

	<select id="cash_area" resultClass="dto">
		select * from paymentList;
	</select>
	<select id="cash_articleList" resultClass="dto" parameterClass="java.util.HashMap">
		select * from paymentList where buyer_chatid = #id# and confirmation = #confirmation#;
	</select>
	
	

	<select id="cash_userAccount" resultClass="uadto">
		select * from userAccount where  id = #id#;
	</select>	
	
	<insert id="cash_input" parameterClass="dto">
		 insert into paymentList(paying_price,buyer_chatid,payment_type,pg_name,confirmation,paying_name,error_msg,imp_uid,merchant_uid,pg_tid,payment_date) values(#paying_price#,#buyer_chatid#,#payment_type#,#pg_name#,#confirmation#,#paying_name#,#error_msg#,#imp_uid#,#merchant_uid#,#pg_tid#,now());
	</insert>
	
	<select id="cash_payment_useInfoLoad" resultClass="userDto" parameterClass="String">
		select * from userInfo where id = #id#;
	</select>
	
	<update id="cash_stack" parameterClass="java.util.HashMap">
			
	</update>
	
	<select id="getArticleCount" resultClass="int">
		select count(*) from paymentList where buyer_chatid = #id#;
	</select>
	
	<!-- 
	<select id="cash_history" resultClass="dto" parameterClass="String">
		select idx,payment_date,payment_type,buyer_chatid,paying_price from paymentList where confirmation = #Accept#	
	</select>
	 -->
	 <select id="cash_id" resultClass="dto" parameterClass="java.util.HashMap">
		select * from paymentList where buyer_chatid = #id# and confirmation = #confirmation#;
	 </select>
	 
	<select id="cash_failureCount" resultClass="int" parameterClass="java.util.HashMap">
		select count(*) from paymentList where buyer_chatid = #id# and confirmation = #confirmation_f#;
	</select>	 
	 
	 <select id="cashCount" resultClass="int">
		select count(*) from paymentList where buyer_chatid=#id#
	 </select>
	 
	 <select id="getArticles" parameterClass="java.util.HashMap" resultClass="dto">
      select r,idx,buyer_chatid,payment_date,payment_type,paying_name,paying_price,confirmation,error_msg,pg_name,imp_uid,merchant_uid,pg_tid 
      from (select @rownum:= @rownum+1 as r, idx,buyer_chatid,payment_date,payment_type,paying_name,paying_price,confirmation,error_msg,pg_name,imp_uid,merchant_uid,pg_tid 
      from paymentList,(select @rownum:=0)i where buyer_chatid=#id# and confirmation = #confirmation# order by idx desc)yz where r between #startRow# and #endRow#;
     </select>

 	 <!-- 회원 로그인 했을때 이벤트로 돈 충전해주는 Log -->
	 <insert id="eventAdminGiveUserMoneyLog" parameterClass="java.util.HashMap">
 		INSERT INTO accountLog (giveId, getId, money, method, reason, signdate)
 						 VALUES('admin', #id#, #eventMoney#, '1', '8', now());
	 </insert>
	 
	 <!-- 회원 로그인 했을때 이벤트로 돈 충전해주는 Log -->
	 <update id="eventAdminGiveUserMoney" parameterClass="java.util.HashMap">
	UPDATE userAccount SET money = money + #eventMoney# WHERE id = #id#;
	 </update>
	 
 	<!-- 사용자 피시방 이용후 종료시 결제 -->
	<select id="userPcUseTimePay" resultClass="useTimeDto" parameterClass="java.util.HashMap">
		<![CDATA[
	select 
	    round((logoutTime - loginTime))  as usePcUseTime, 
        round((logoutTime - loginTime) * c.moneyPolicy)  as usePcUseTimePay, 
	    b.money as userAccountMoney,
	    b.money - (round((logoutTime - loginTime) * c.moneyPolicy))  as payAfterMoney, 
	    loginTime, logoutTime, b_key  
   	from useTimeLog a INNER JOIN (select id, money from userAccount where id = #id#) b ON a.id = b.id ,
   	(select c.moneyPolicy, c.b_key from franchiseePolicy c, (select b_key from franchiseeLog where b_ip = #b_ip#) d where c.b_key = d.b_key ) c
   	where a.id = #id# order by loginTime desc limit 0,1;
		]]>
	</select>
	
	
	<!-- 사용자 이용내역 추가 (usageHistory) -->
	<insert id="addUsageHistory" parameterClass="historyDTO">
		insert into usageHistory values(#idx#, #userId#, #userName#, #affiliateCode#, #usageTime#, #endTime#, #amountUsed#, #etc#, #businessName#, #bossId#);
	</insert>

	<!-- 사용자의 잔액 가져오기 (15번째 코드에서 parameterClass 빠져있음) -->
	<select id="getUserAccount" parameterClass="String" resultClass="uadto">
		select * from userAccount where id = #id#;
	</select>	
</sqlMap>

	<!-- 사용자 이용 내역 -->
	<select id="usageHistory" resultClass="usageHistoryDTO">
		select * from usageHistory where bossId= #id#;
	</select>
	
	<select id="usageHistoryCount" resultClass="int">
		select count(*) from usageHistory where affiliateCode=#affiliateCode#;
	 </select>
	 
	 <!-- 
	 <select id="getUsageHistory" parameterClass="java.util.HashMap" resultClass="usageHistoryDTO">
      select r,idx,userId,userName,affiliateCode,usageTime,endTime,amountUsed,etc
      from (select @rownum:= @rownum+1 as r, idx,userId,userName,affiliateCode,usageTime,endTime,amountUsed,etc
      from usageHistory,(select @rownum:=0)i where bossId=#id# order by idx desc)yz where r between #startRow# and #endRow#;
     </select>
      -->
     <select id="getB_key" resultClass="String">
    	 select b_key from franchiseeInfo where b_id=#id#;
     </select>
	 
	 <select id="getB-keyList" resultClass="String">
		select b_key from franchiseeInfo where b_id	= #id#; 
	 </select>
	 <select id="B_keyValidity" resultClass="int">
	 	select count(*) from usageHistory where affiliateCode = #affiliateCodeList#;
	 </select>
	 
	 <select id="SelectedList" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
   <![CDATA[
           select r,idx,userId,userName,affiliateCode,usageTime,endTime,format(amountUsed, 0) amountUsed,etc,businessName,bossId
            from (select @rownum:= @rownum+1 as r, idx,userId,userName,affiliateCode,usageTime,endTime,amountUsed,etc,businessName,bossId
            from usageHistory,(select @rownum:=0)i where affiliateCode=#affiliateCodeList# and usageTime >=#startDate# and endTime <=#endDate# order by idx desc)yz where r between #startRow# and #endRow#;
       ]]>
   </select>
	<!-- 일일정산시 총 합계 금액 -->
	<select id="dailyAmount" resultClass="String">
	<![CDATA[
		select format(sum(amountUsed), 0) from usageHistory where affiliateCode=#affiliateCode# and usageTime >=#startDate# and endTime <= #endDate#;
	]]>
	</select>
	
	<select id="dailyPureAmount" resultClass="String">
	<![CDATA[
		select sum(amountUsed) from usageHistory where affiliateCode=#affiliateCode# and usageTime >=#startDate# and endTime <= #endDate#;
	]]>
	</select>

	<select id="dailyCount" resultClass="int">
	<![CDATA[
		select count(*) from usageHistory where affiliateCode = #affiliateCode# and usageTime >=#startDate# and endTime <= #endDate#;
	  ]]>
	</select>
	
	<insert id="dailySettlement" parameterClass="DailySettlementDTO" >
		 insert into dailySettlement(settlementDate,bossId,companyName,settlementMethod,settlementNumber,requestedAccount,settlementAmount,settlementStatus,resultValue,b_key) 
		 values(now(),#bossId#,#companyName#,#settlementMethod#,#settlementNumber#,#requestedAccount#,#settlementAmount#,#settlementStatus#,#resultValue#,#b_key#);
	</insert>
	
	<select id="resultValueCount" resultClass="int">
	<![CDATA[
		select count(resultValue) from dailySettlement where affiliateCode = #affiliateCode# and usageTime >=#startDate# and endTime <= #endDate#;
	]]>
	</select>
	
	<select id="settlementDate" resultClass="String">
		select settlementDate from dailySettlement where affiliateCode = #affiliateCode# and settlementDate=#settlementDate#;
	</select>
	
	<select id="accept" resultClass="DailySettlementDTO">
	<![CDATA[
		select  r,idx,settlementDate,bossId,companyName,settlementMethod,settlementNumber,requestedAccount,settlementAmount,settlementStatus
	  from (select @rownum:= @rownum+1 as r, idx,settlementDate,bossId,companyName,settlementMethod,settlementNumber,requestedAccount,settlementAmount,settlementStatus
      from dailySettlement,(select @rownum:=0)i where resultValue = #check# order by idx desc )yz
      ]]>
	</select>

	<select id="acceptCount" resultClass="int">
		select count(*) from dailySettlement where resultValue = 2;
	</select>
	
	<update id="approval" parameterClass="java.util.HashMap">
		update dailySettlement set resultValue=3, settlementStatus='정산완료'  where idx=#idx#;
	 </update>
	 
	 <select id="checkValue"  resultClass="int">
	 <![CDATA[
	 	select count(*) from dailySettlement where b_key = #b_key# and settlementDate <= #settlementDate#;
	 ]]>
	 </select>
	
</sqlMap>
